触发器：

触发器组成: 
    触发事件：引起触发器被触发的事件。 例如：DML语句(INSERT, UPDATE, DELETE语句对表或视图执行数据处理操作)、
         DDL语句（如CREATE、ALTER、DROP语句在数据库中创建、修改、删除模式对象）、
           数据库系统事件（如系统启动或退出、异常错误）、用户事件（如登录或退出数据库）。

    触发时间：即该TRIGGER 是在触发事件发生之前（BEFORE）还是之后(AFTER)触发，
            也就是触发事件和该TRIGGER 的操作顺序。

    触发操作：即该TRIGGER 被触发之后的目的和意图，正是触发器本身要做的事情。 例如：PL/SQL 块。

    触发对象：包括表、视图、模式、数据库。只有在这些对象上发生了符合触发条件的触发事件，才会执行触发操作。

    触发条件：由WHEN子句指定一个逻辑表达式。只有当该表达式的值为TRUE时，遇到触发事件才会自动执行触发器，
               使其执行触发操作。

    触发频率：说明触发器内定义的动作被执行的次数。即语句级(STATEMENT)触发器和行级(ROW)触发器。
              行级触发器 for each row  当触发器操作影响到多行数据时，每行都执行一次触发事件
              语句级触发器 不加for each row  当触发器操作影响到多行数据时，只执行一次
   

定义触发器  在更新employee表时触发
create or replace trigger updateemp_trigger
  after update on  employee
is
begin
 dbms_output.put_line('执行undate操作了');
end;
 
  
触发器 非工作时间不能插入数据
create or replace trigger mytrigger
before insert on emp2
declare
  -- 变量
begin
  if  not (to_number( to_char(sysdate, 'hh24') ) between 9 and 17) then
    raise_application_error(-20000, '现在是非工作时间，不能插入数据！');
  end if;
end;
/

--行级触发器 例：确认数据，更新工资一定不能比之前的少。
create or replace trigger checkSal
before update
on emp2
for each row
declare
  -- 变量
begin
  if :new.sal < :old.sal then
    raise_application_error(-20001, '涨工资不能越涨越少！');
  end if;
end;
/
----------------------------------
触发语句    :old                :new
insert      所有字段都是null     将要插入的数据
update      更新以前该行的值     更新后的值
delete      删除以前该行的值     所有字段都是null

注：只能用于行级触发器 for each row
----------------------------------
