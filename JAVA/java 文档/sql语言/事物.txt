sql中事物指几个sql语句要么全部执行成功，要么全部不成功，如A向B转账
如果执行过程中出现异常，数据库会回滚掉已执行的sql语句

mysql开启事务

start transaction;//开启事物
...
...
commit;//提交


rollback;//手动回滚，取消已执行的sql语句


通常通过程序来执行事务：
JDBC控制事务语句

Connection conn=DriverManager.getConnection(url,username,password);//获得链接对象
conn.setAutoCommit(false); //取消自动提交功能，相当于start transaction
conn.rollback(); //rollback
conn.commit(); //commit 必须要有这句代码，不提交不执行sql

可以设置回滚点，如果出现异常就不回滚掉所有sql,而是在回滚点之后的sql被回滚掉,回滚点之前的sql被执行

try｛
...
...
Savepoint sp=conn.setSavepoint();//设置回滚点
...
...
conn.commit();
｝catch(Exception e)
{
  conn.rollback(sp);
  conn.commit();//手动回滚后一定要记得提交事务；
}


事务的四大特性：
原子性：要么都发生，要么都不发生
一致性：事务前后数据的完整性必须保持一致，如转账前A和B的钱和转账后A和B的钱总量必须保持一致
隔离性：多个用户并发访问数据库时，一个用户的事务不能被其他用户的事务干扰，多个并发事务之间数据要隔离
持久性：指一个事务一旦被提交，它对数据库中数据的改变就是永久性的，接下来即使数据库发生故障也不应该对其有任何影响


不考虑隔离性问题：
1.脏读：
读到另一个事务未提交的数据
如：A向B转账，A未提交就通知B查看账户，B查看到了未提交的数据，以为A向B汇款了，这时A回滚事务，导致B最终没有收到汇款

2.不可重复读：
读到了已提交的数据，两次读取的数据大小不一样

3.虚读（幻读）
是指一个事务读到另一个事务插入或删除后的结果，导致前后读取数据量不一致


数据库定义了4种隔离级别
serializable:可避免脏读，不可重复读，虚读

repeatable read:可避免脏读，不可重复读

read committed:可避免脏读

read uncommitted:均无法保证


set transaction isolation level 隔离级别 ;//SQL设置事务隔离级别
如：set transaction isolation level read committed;

select @@tx_isolation;查询当前事务的隔离级别

设置为serializable性能最低，锁表，相当于单线程，一个事务未结束前，另一个事务无法进行

用程序设置隔离级别：
mysql默认是repeatable read;
oracle默认是read committed;
oracle只支持serializable和read committed;mysql四种都支持。

conn.setTransactionIsolation(Connection.TRANSACTION_SERIALIZABLE);//设置隔离级别
