步骤：
  1.预解析
    预编译期JS会对本代码块中的所有声明的变量和函数进行处理（类似与C语言的编译），
    但需要注意的是此时处理函数的只是声明式函数，而且变量也只是进行了声明但未进行初始化以及赋值。



  2.逐行解析




案例1： 
   alert(a);
   var a=1;
输出结果： undefined

原因： 预解析时 遇到 var a=1 时会先把a定义为undefined而不去管它的实际值，存入仓库，
       逐行解析执行时，遇到alert(a) 会去仓库中看有没有a, 有则取出来，没有则报错。



案例2：
  alert(a);
  var a=1;
  alert(a);
  function a(){
    alert("xx");
  }

输出结果:
   第一次弹出  function a(){ alert('xx')} 
   第二次弹出  1

原因：
   预解析时会先处理变量， 遇到var a=1 时把 a以undefined存入仓库， 遇到 function a时
   发现仓库中已经有了名称为a的变量，则会覆盖原来的值，(即第一次时不管实际值，当作undefind
   ，之后遇到同名的，会覆盖上一次存入的值) 所以把a以 function a(){alert("xx")}存入仓库

   逐行解析时，遇到第一个alert(a)，从仓库中获取到的值为function a(){alert("xx")};
   然后遇到var a=1;则会把仓库中的function a(){alert("xx")};替换成1
