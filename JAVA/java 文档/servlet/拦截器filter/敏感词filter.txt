参考：

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletRequestWrapper;
import javax.servlet.http.HttpServletResponse;

public class WordsFilter implements Filter {

	private List<String> banWords = new ArrayList();
	private List<String> auditWords = new ArrayList();
	private List<String> replaceWords = new ArrayList();
	
	public void init(FilterConfig filterConfig) throws ServletException {
		try{
			String path = WordsFilter.class.getClassLoader().getResource("cn/itcast/words").getPath();
			File files[] =  new File(path).listFiles();
			for(File file : files){
				if(!file.getName().endsWith(".txt")){
					continue;
				}
				BufferedReader br = new BufferedReader(new FileReader(file));
				String line = null;
                                //敏感词库中，敏感词的格式为：xx|1  1表示敏感词的等级，1为敏感，2为审核，3为需要替换的词
				while((line=br.readLine())!=null){
					String s[] = line.split("\\|");
					if(s.length!=2){
						continue;
					}
					if(s[1].trim().equals("1")){
						banWords.add(s[0].trim());
					}
					
					if(s[1].trim().equals("2")){
						auditWords.add(s[0].trim());
					}
					
					if(s[1].trim().equals("3")){
						replaceWords.add(s[0].trim());
					}
				}
			}
			System.out.println("haha");
		}catch (Exception e) {
			throw new RuntimeException(e);
		}

	}
	
	public void doFilter(ServletRequest req, ServletResponse resp,
			FilterChain chain) throws IOException, ServletException {

		HttpServletRequest request = (HttpServletRequest) req;
		HttpServletResponse response = (HttpServletResponse) resp;
		
		//检查提交数据是否包含禁用词
		Enumeration e = request.getParameterNames();
		while(e.hasMoreElements()){
			String name = (String) e.nextElement();
			String data = request.getParameter(name); 
			for(String regex : banWords){
				Pattern pattern = Pattern.compile(regex);//得到正则表达式
				Matcher m = pattern.matcher(data);
				if(m.find()){
					request.setAttribute("message", "文章中包括非法词汇，请检查后再提交！！");
					request.getRequestDispatcher("/message.jsp").forward(request, response);
					return;
				}
			}
		}
		
		//检查审核词
		
		//检查替换词
		chain.doFilter(new MyRequest(request), response);
		
	}
	
	
	class MyRequest extends HttpServletRequestWrapper{
		private HttpServletRequest request;
		public MyRequest(HttpServletRequest request) {
			super(request);
			this.request = request;
		}
		@Override
		public String getParameter(String name) {
			
			String data = this.request.getParameter(name);
			if(data==null){
				return null;
			}
			for(String regex : auditWords){
				Pattern p = Pattern.compile(regex);
				Matcher m = p.matcher(data);
				if(m.find()){    //我有一把仿真手枪，你要电鸡吗？？
					String value = m.group();  //找出客户机提交的数据中和正则表达式相匹配的数据
					data = data.replaceAll(regex, "<font color='red'>" + value + "</font>");
				}
			}
			
			
			for(String regex : replaceWords){
				Pattern p = Pattern.compile(regex);
				Matcher m = p.matcher(data);
				if(m.find()){    //我有一把仿真手枪，你要电鸡吗？？
					data = data.replaceAll(regex, "*******");
				}
			}
			
			return data;
		}
	}
	
	public void destroy() {
		// TODO Auto-generated method stub
	}

	

}
