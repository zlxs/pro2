load(url,args,function(response,status,xhr)): 

load() 方法通过 AJAX 请求从服务器加载数据，并把返回的数据放置到指定的元素中。

第一个参数：规定要将请求发送到哪个 URL。
第二个参数（可选）：规定连同请求发送到服务器的JSON数据
第三个参数（可选）：载入成功时回调函数

回调函数参数：
response - 请求返回的结果数据
status - 包含请求的状态（"success", "notmodified", "error", "timeout" 或 "parsererror"）
xhr - 包含 XMLHttpRequest 对象

默认使用 GET 方式 - 传递附加参数时自动转换为 POST 方式。

如：$("#div1").load("1.jsp")  1.jsp中输出out.write("aaa"),  则会自动把aaa插入到该div中 

可以指定选择符，来筛选载入的 HTML 文档，DOM 中将仅插入筛选出的 HTML 代码。url后加一个选择器
如：
1.jsp中有一个 <h1>xxxx</h1>,则$("#div1").load("1.jsp h1");就会把1.jsp中的h1插入到该div中



$.get(url,args,function(data,textstatus) [,type]) 

get方法的回调函数只有两个参数：
data代表返回的内容
textstatus代表请求的状态
type 返回内容格式 xml html json text script  _default  可写可不写

其他参数和load()方法一致：
第一个参数：规定要将请求发送到哪个 URL。
第二个参数（可选）：规定连同请求发送到服务器的json格式数据 {key:value,key2:value2...}

如：$.get("1.jsp h1" function(data,textstatus){
    $("#div1").text(data);//就会把1.jsp中的h1插入到该div中
})

$.post()和$.get()方法一样，就是请求的方式不一样


$.getJSON(url,args,function(data,textstatus))方法, 和$.get()一样，不同的是它要求服务器返回的data是JSON对象，
所以不用通过eval()函数转换为JSON，而$.get()方法返回的data不是JSON对象


serialize():  序列化表单值方法 ，简化发送到服务器的key:value数据
将DOM元素内容，序列化为字符串，用于ajax请求

$.get("1.jsp",{username:"aaa",password:"123"});//等价于$.get("1.jsp",$("form").serialize());

$("form").serialize()==username=aaa&password=123




原始方式：
$.ajax({
        type: "POST",
        url: "RequestData.ashx",
        contentType: "application/json; charset=utf-8",  //指定传递的是json格式数据，默认是key/value格式
        data: JSON.stringify(GetJsonData()),
        dataType: "json",
        success: function (message) {
            if (message > 0) {
                alert("请求已提交！我们会尽快与您取得联系");
            }
        },
        error: function (message) {
            $("#request-process-patent").html("提交数据失败！");
        }
    });

JQuery Ajax模板：

$("选择器").事件(function(){	
	$.ajax({		
		//请求类型		
		type: 'post',		
		//请求路径		
		url: "<s:url value='/namespace/actionName.action'/>",	
		//数据格式		
                dataType:"json",	
	        //提交的数据		
		data: {"user.name":username},		
		//处理错误…		
		error: function(){			
		},		
		//处理成功…		
		success: function(result){
                		
		}
	});
});
