
使用延迟加载方法：先去查询简单的sql(最好单表，也可以关联查询)，
 再去按需加载关联查询的其它信息


例：
要求查询指定员工和他所在部门的信息，如员工id为1
做两次查询
   select * from employee where id=1;
   select * from department where id=上面的结果中的department_id ;

需要的时候再进行第二次查询


<select id="getEmployee" parameterType="int" resultMap="getEmployeeMap">
   select id,name,department_id from employee where id=#{id}
</select>
<resultMap id="getEmployeeMap" type="xxx.xx.domain.Employee">
   <id property="id" column="id"/>
   <result property="employeeName" column="name"/>
   <!--以查询出的department_id字段值，再去查部门表-->
   <association property="department" column="department_id" select="getDepartment" ></association>
</resultMap>
<select id="getDepartment" parameterType="int" resultType="xxx.xx.domain.Department">
   select id,name departmentName from department where id=#{id}
</select>

collection也有select字段来关联查询


延迟加载配置：mybatis默认是关闭懒加载的
需要在mybatis-cfg.xml文件中配置   默认false

lazyLoadingEnabled:全局性设置懒加载。如果设为false,则所有相关联的都会被初始化加载

aggressiveLazyLoading:当设置为true的时候，懒加载的对象可能被任何懒属性全部加载
  否则，每个属性都按需加载    默认true

<settings>
  <!--打开延迟加载的开关-->
  <setting name="lazyLoadingEnabled" value="true"/>
  <!--将积极加载改为消极加载即按需要加载-->
  <setting name="aggressiveLazyLoading" value="false"/>
</settings>
