对象的状态：
自由(临时、瞬时)状态（transient）: 不曾进行持久化，未与任何Session相关联
   在数据库中没有和瞬时对象关联的记录


持久化状态（persistent）   简单的说，就是数据库中有该对象对应的记录，缓存中也有该对象
  仅与一个Session相关联
  通过 Session 的 save() 和 saveOrUpdate() 方法把一个瞬时对象与数据库相关联，这个瞬时对象就成为持久化对象。
  使用 fine(),get(),load() 和 iterater() 待方法查询到的数据对象，将成为持久化对象。

------------#################----------------------
注：处于持久态的实体对象的最大特征是对其所作的任何变更操作都将被Hibernate持久化到数据库中

如： User u=new User("aaa","123");
     session.save(u);//发一次insert语句
     u.setName("bbb");//发一次update语句
最终数据库中的记录name属性为bbb
------------#################----------------------

游离状态:   简单的说，就是数据库中有对象对应的记录，但缓存中已经没有了该对象了
  当与某持久对象关联的session被关闭后,该持久对象转变为游离对象.
当游离对象被重新关联到session上 时,又再次转变成持久对象。 
游离对象拥有数据库的识别值,但已不在持久化管理范围之内。


游离状态（脱管状态）（detached）: 已经进行过持久化，但当前未与任何Session相关联
 当执行session.close() 或 clear(),evict()和提交事务之后，持久对象会变为脱管对象。
此时该对象虽然具有数据库识别值,但它已不在hibernate持久层的管理之下
 session.getTransaction.commit()   //事务一提交，session就会关闭



因关闭session而变成游离态的可以通过lock、SaveOrUpdate、update变成持久态


 如果是用hibernate的delete()方法,对应的持久对象就变成临时对象,
因数据库中 的对应数据已被删除,该对象不再与数据库的记录关联


