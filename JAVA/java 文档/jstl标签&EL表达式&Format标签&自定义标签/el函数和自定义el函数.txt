jstl的el函数用于对字符串处理，导入<%@taglib  url="..."  prefix=".."%>

${empty(list)}  判断域中存的list是否为空或null


el表达式支持三目运算符，但不能连接字符串
可以为
${user!=null?user.username:''}
不能为
${user!=null?欢迎你：+user.username:''}

以下案例的测试字符串都可以通过从指定域取出来，而不是写死  ${ fn:trim(user.username)}

${fn:trim(" dafs ")}  //去除两段空格

${fn:toLowerCase("AAAA")}  //转成小写

${fn:length(arr)} //得到集合，数组或字符串的长度

${fn:split("www.baidu.com",".")} //分隔字符串 得到www baidu com的数组

${fn:join(fn:split("www.baiu.com",".")",")} //连接字符串数组 得到www,baidu,com

${fn:indexOf("www.baidu.com","ba")} //寻找指定字符串第一次出现的位置，返回值为4

${fn:contains("aabbcc","ab")} //检测一个字符串是否包含指定字符串，大小写敏感

${fn:startWith("aabbcc","aa")} //检测一个字符串是否以指定字符串开头

${fn:replace("www.baidu.com),".","/"} //将一个字符串中包含的指定子串替换为其他的指定字符串
   把.替换成/

${fn:substring("www.baidu.com",4,9)} //字符串截取  返回baidu

${fn:substringAfter("www.baidu.com",".")} //返回指定字符串第一次出现之后的子串
   返回baidu.com

${fn：substringBefore("www.baidu.com",".")} //返回指定字符串第一次出现之前的子串
   返回www

${fn:escapeXml("<br/>")} //转义


${fn:containsIgnoreCase(name, searchString)}测试输入的字符串包含指定的子串，不区分大小写的方式

...

--------------------------------------------------------------
自定义el函数需要在tld文件中描述,el函数只能是类的静态方法

public class MyEL{

 public static String aaa(String s){
   return "欢迎你:"+s;
 }
}

tld描述：
<tlib-version>版本号描述</tlib-version>
 <short-name>指定标签库默认的前缀名(prefix)</short-name>
<uri>设定标签库唯一访问表示符</uri>
<function>
    <name>aaa</name>
    <function-class>xxx.xx.xxx.MyEL</function-class>
    <function-signature>java.lang.String aaa(java.lang.String)</signature>//方法声明
</function>

页面：
<%@taglib  url="..."  prefix="my"%>
${my:aaa(username)}
